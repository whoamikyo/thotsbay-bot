name: Run main

on:
  schedule:
    - cron: "0 */4 * * *"
  workflow_dispatch:
    inputs:
      force:
        description: "Enter 'force' if you want to force a refresh"
        required: false
        default: ""
env:
  RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
  THOTSBAY_USER: ${{ secrets.THOTSBAY_USER }}
  THOTSBAY_PW: ${{ secrets.THOTSBAY_PW }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  ID_CONFIG: ${{ secrets.ID_CONFIG }}
  CONFIG: ${{ secrets.CONFIG }}
  IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
  CDN: ${{ secrets.CDN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REFERER: ${{ secrets.REFERER }}
  LATEST_POST: ${{ secrets.LATEST_POST }}
  CONFIG_BACKUP: ${{ secrets.CONFIG_BACKUP }}
  ID_CONFIG_BACKUP: ${{ secrets.ID_CONFIG_BACKUP }}
  API_KEY: ${{ secrets.API_KEY }}
  URL_BASE: ${{ secrets.URL_BASE }}
  ENABLE_TASK: ${{ secrets.ENABLE_TASK }}
  CYBERDROP_TOKEN: ${{ secrets.CYBERDROP_TOKEN }}
  ID_CONFIG_TESTE: ${{ secrets.ID_CONFIG_TESTE }}
  GALLERY : ${{ secrets.GALLERY }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.10.4]
        poetry-version: [1.1.13]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONF" > ~/.config/rclone/rclone.conf
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-dev
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      - name: Run main.py
        run: |
          poetry run python main.py
      - name: ðŸš€ Deploy changes
        run: |
          # set git author
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git commit -m "Auto-update"
          # finally push
          git push